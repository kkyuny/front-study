div {
  color: red;
  font-size: 100px;
}

/* 
  선택자 { 속성 : 값;} : 선택자의 속성은 값이다.
  div { color: red; margin: 20px;}
  ->div의 color는 red, margin은 20px이다.
  ->들여쓰기하여 작성한다.
  
  CSS 선언방식
  1. 내장방식
    <style></style>의 내용으로 스타일을 작성하는 방식
    -> css를 html head에 내장하여 작성하는 방식
    -> 별도의 css 파일을 만들지 않고 적용할 수 있다.
    -> 하지만 코드가 복잡해지는 단점이 있다.
  
  2. 인라인 방식
    요소의 style 속성에 직접 스타일을 작성하는 방식
    ex)<div style="color: red;></div>
    -> 편리하지만 인라인 방식은 지나치게 높은 우선순위를 갖고 있어
    추 후 링크 방식 등으로 코드를 작성할 경우 값이 적용되지 않는 등의
    유지보수가 어렵다는 단점이 있다.
  
  3.링크 방식
    <link />로 외부 css 문서를 가져와서 연결하는 방식
    ex) <link rel="stylesheet" href="./css/main.css">
    -> 병렬로 연결된 방식이라고 하는데 의미는 잘 모르겠다.
    
  4. @import 방식
    CSS의 @import 규칙으로 CSS 문서 안에서
    또 다른 CSS 문서를 가져와 연결하는 방식
    ex) main.css 
    @import url("./box.css");
    div {
      color: red;
    }
    box.css
    .box {
      background-color: red;
    }
    -> main.css에서 box.css을 import하여 연결하여 사용하는 방식
    -> 직렬로 연결하는 방식이라고 부른다.
    -> main.css가 실행되지 않으면 box.css을 사용할 수 없다는 의미이다.
    -> box.css 사용을 통제하려는 목적으로 사용할 수 있다.


-CSS의 선언은 선택자 { 속성 : 값; 속성 : 값; ...} 으로 선언한다.

-CSS 선택자
1. * 선택자: 전체 선택자로서 모든 요소를 선택한다.
* {
  color: red;
} 
-> 모든 요소가 red로 변경된다

2. 태그 선택자: 입력된 태그 이름의 모든 태그를 선택한다.
li {
}
-> <li> 태그가 모두 선택된다.

3. 클래스 선택자: 입력된 class 속성의 모든 class를 선택한다.
.className {
}
class="className" 을 갖는 모든 class가 선택된다.

4. ID 선택자: 입력된 id 속성의 값을 선택한다.
#ID {
}
-> ID는 1개만 존재한다.

- CSS 복합 선택자
 1. 일치 선택자: 선택자 여러개를 동시에 만족하는 요소 선택
 span.orange{
 }
 ->span 태그의 orange 클래스를 선택한다.

 2. 자식 선택자: 선택자의 자식 요소 선택
 ul > .orange{
 }
 -> ul의 자식 요소 중에 orange 클래스를 모두 선택한다.

 3. 하위 선택자: 선택자의 하위 요소 선택
 div .orange{
 }
 -> div의 하위에 있는 선택자 중에 orange 클래스를 모두 선택한다.

 4. 인접 형제 선택자: 선택자의 다음 형제 요소 하나를 선택
 .orange + li{
 }
 -> orange 클래스 요소 다음(같은 레벨이 위치한)에 오는 li라는 다음 형제 요소를 한개 선택한다.

 5. 일반 형제 선택자: 선택자의 다음 형제 요소 모두를 선택
  .orange ~ li{
  }
  -> orange라는 클래스를 기준으로 오는 li라는 모든 형제 요소를 선택한다.

05,6. 선택자_가상 클래스(1)
.box: hover {
  width: 300px;
}
- css에도 동작을 제어할 수 있는 가상 클래스가 있다.
 ->".className : 동작시키려는 기능"(hover 등)으로 사용한다.
- 가상 클래스 선택자
 1) hover : 마우스를 올리고 있는 동안 변환된다.
 2) active : 마우스가 클릭되어 있는 동안 동작
 3) focus: 포커스가 가능한 요소에 포커스가 되면 동작(대표적으로 input)
  * 태그 속성에 tabindex="-1"을 하게되면 해당 태그가 포커스가 되는 속성으로 변환된다.
 4) first-chile : 선택자가 형제 요소 중 첫째라면 선택한다.
 5) last-chile : 선택자가 형제 요소 중 막내라면 선택한다.
 6) ntn-child(n) : 선택자가 형제 요소 중 n째라면 선택한다.
 7) not(X) : 선택자 X가 아닌 요소 선택

 07. 선택자_가상 요소
  1) .box::before{
      content: "앞!";
     }      
     -> 선택자 요소의 내부 앞에 내용을 삽입하는 것으로
     가상의 인라인 요소을 만들어서 요소의 앞에 삽입이 된다.
     -> 요소를 삽입하는 선택자로서 반드시 content의 속성을 사용해야한다.
     <div class="box">
       before가 삽입 된다.
       Condent!
     -> 앞! Content!가 출력된다.
      
  2) .box::after{
     content: "뒤!";
     }      
     -> 선택자 요소의 내부 앞에 내용을 삽입하는 것으로
     가상의 인라인 요소을 만들어서 요소의 앞에 삽입이 된다.
     -> 요소를 삽입하는 선택자로서 반드시 content의 속성을 사용해야한다.
     <div class="box">       
       Condent!
       after가 삽입 된다.
     -> Content! 뒤! 가 출력된다.
  *tip: css의 선택자의 블럭 속성을 바꾸는 방법 display = ;

 08. 선택자_속성: 
    1) [ABC] {} : ABC 속성을 포함한 요소 선택
    - css
    [disabled] {
      color : red;
    }
    - html
    <input type="text" value="ABCD" disabled/>
    -> disabled 속성을 갖는 요소를 선택한다
    2)[ABC="XYZ"]: ABC 속성을 포함하고 값이 XYZ인 요소 선택
      [type="password"]{
        color:red;
      }
      <input type="password" value="1234">
      -> 속성이 일치하는 html 요소를 선택한다.
  
  09. 스타일 상속: 부모의 일부 스타일이 자식 요소에게도 적용된다.
   - 상속되는 CSS 속성들: 모두 글자/문자와 관련된 속성들이다.
    : font-style, font-weight, font-size, line-height, color 등
   - 강제 상속: 상속이 되지 않는 스타일을 상속시킬 수가 있다.
   - 사용방법: 부모의 속성을 그대로 따라야하는 값을 inherit 이용하여 상속 받는다
     .parent{
       height = 200px;
     }
     .child{
       height = inherit;
     }
    -> 이 때, 반드시 hmtl의 구조적으로 child가 parent의 하위 위치에 있어야한다.

  10. 선택자 우선순위
    -우선 순위란: 같은 요소가 여러 선언의 대상이 된 경우,
    어떤 선언의 CSS 속성을 우선 적용할지 결정하는 방법
    1) 점수가 높은 선언이 우선함
    2) 점수가 같으면, 가장 마지막에 해석된 선언이 우선함.
     - 점수표
      ID 선택자: 100점 #color_yellow { color: yellow;}
      Class 선택자: 10점 .color_yellow { color: yellow;}
      태그 선택자: 1점 div { color: yellow;}
      전체 선택자: 0점 * {color: yellow;}
      !important: 무한대 ex) div { color: red !important;}
      인라인 선언: 1000점 <div style="color: orange;">
      -> 어떠한 문장에 여러개의 css가 적용되야할 경우 우선순위를 따져 css가 적용된다.


      
*/
