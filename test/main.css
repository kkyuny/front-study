div {
  color: red;
  font-size: 100px;
}

/* 
  선택자 { 속성 : 값;} : 선택자의 속성은 값이다.
  div { color: red; margin: 20px;}
  ->div의 color는 red, margin은 20px이다.
  ->들여쓰기하여 작성한다.
  
  CSS 선언방식
  1. 내장방식
    <style></style>의 내용으로 스타일을 작성하는 방식
    -> css를 html head에 내장하여 작성하는 방식
    -> 별도의 css 파일을 만들지 않고 적용할 수 있다.
    -> 하지만 코드가 복잡해지는 단점이 있다.
  
  2. 인라인 방식
    요소의 style 속성에 직접 스타일을 작성하는 방식
    ex)<div style="color: red;></div>
    -> 편리하지만 인라인 방식은 지나치게 높은 우선순위를 갖고 있어
    추 후 링크 방식 등으로 코드를 작성할 경우 값이 적용되지 않는 등의
    유지보수가 어렵다는 단점이 있다.
  
  3.링크 방식
    <link />로 외부 css 문서를 가져와서 연결하는 방식
    ex) <link rel="stylesheet" href="./css/main.css">
    -> 병렬로 연결된 방식이라고 하는데 의미는 잘 모르겠다.
    
  4. @import 방식
    CSS의 @import 규칙으로 CSS 문서 안에서
    또 다른 CSS 문서를 가져와 연결하는 방식
    ex) main.css 
    @import url("./box.css");
    div {
      color: red;
    }
    box.css
    .box {
      background-color: red;
    }
    -> main.css에서 box.css을 import하여 연결하여 사용하는 방식
    -> 직렬로 연결하는 방식이라고 부른다.
    -> main.css가 실행되지 않으면 box.css을 사용할 수 없다는 의미이다.
    -> box.css 사용을 통제하려는 목적으로 사용할 수 있다.


-CSS의 선언은 선택자 { 속성 : 값; 속성 : 값; ...} 으로 선언한다.

-CSS 선택자
1. * 선택자: 전체 선택자로서 모든 요소를 선택한다.
* {
  color: red;
} 
-> 모든 요소가 red로 변경된다

2. 태그 선택자: 입력된 태그 이름의 모든 태그를 선택한다.
li {
}
-> <li> 태그가 모두 선택된다.

3. 클래스 선택자: 입력된 class 속성의 모든 class를 선택한다.
.className {
}
class="className" 을 갖는 모든 class가 선택된다.

4. ID 선택자: 입력된 id 속성의 값을 선택한다.
#ID {
}
-> ID는 1개만 존재한다.

- CSS 복합 선택자
 1. 일치 선택자: 선택자 여러개를 동시에 만족하는 요소 선택
 span.orange{
 }
 ->span 태그의 orange 클래스를 선택한다.

 2. 자식 선택자: 선택자의 자식 요소 선택
 ul > .orange{
 }
 -> ul의 자식 요소 중에 orange 클래스를 모두 선택한다.

 3. 하위 선택자: 선택자의 하위 요소 선택
 div .orange{
 }
 -> div의 하위에 있는 선택자 중에 orange 클래스를 모두 선택한다.

 4. 인접 형제 선택자: 선택자의 다음 형제 요소 하나를 선택
 .orange + li{
 }
 -> orange 클래스 요소 다음(같은 레벨이 위치한)에 오는 li라는 다음 형제 요소를 한개 선택한다.

 5. 일반 형제 선택자: 선택자의 다음 형제 요소 모두를 선택
  .orange ~ li{
  }
  -> orange라는 클래스를 기준으로 오는 li라는 모든 형제 요소를 선택한다.
*/
